@using Alpha.ViewModels
@model ContactUsListViewModel
@{
    ViewData["Title"] = "Contact Us";
}

<h2>Contact Us</h2>

@if (Model.ContactUsList.Any())
{
    <p>
        @*<a asp-action="Create">Create New</a>*@
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ContactUsList.FirstOrDefault().Email)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.ContactUsList.FirstOrDefault().Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ContactUsList.FirstOrDefault().CreatedDate)
                </th>
                
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ContactUsList)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        <LocalDate utc="@item.CreatedDate"></LocalDate>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            @{
                var totalPages = Model.PagingInfo.TotalPages;
                var pageSize = Model.PagingInfo.PageSize;
                int m = -(pageSize - 1) / 2;
                int p = pageSize + m;
                var currentPage = Model.PagingInfo.CurrentPage;
                var start = currentPage + m;
                if (start <= 0) { start = 1; }
                var end = currentPage + p;
                if (end > totalPages) { end = totalPages; }
                var previousPage = start - 1;
                if (previousPage <= 0) { previousPage = 1; }
                var nextPage = end + 1;
                string pageNumberStatus = string.Empty;// or active
                string nextPageButtonStatus = string.Empty; // or disabled
                string previousPageButtonStatus = string.Empty; // or disabled
                if (nextPage > totalPages) { nextPage = totalPages; }

                if (currentPage == start) { previousPageButtonStatus = "disabled"; } else { previousPageButtonStatus = string.Empty; }
                <li class="page-item @previousPageButtonStatus">
                    <a class="page-link" asp-controller="@Model.TargetController" asp-action="@Model.TargetAction" asp-route-pageNumber="@previousPage" title="" tabindex="-1">Previous</a>
                </li>
                for (int pageNumber = start; pageNumber <= end; pageNumber++)
                {
                    if (pageNumber == currentPage) { pageNumberStatus = "active"; }
                    else { pageNumberStatus = string.Empty; }
                    <li class="page-item @pageNumberStatus">
                        <a class="page-link" asp-controller="@Model.TargetController" asp-action="@Model.TargetAction" asp-route-pageNumber="@pageNumber">@pageNumber</a>
                    </li>
                }
                if (currentPage == end) { nextPageButtonStatus = "disabled"; } else { nextPageButtonStatus = string.Empty; }
                <li class="page-item @nextPageButtonStatus">
                    <a class="page-link" asp-controller="@Model.TargetController" asp-action="@Model.TargetAction" asp-route-pageNumber="@nextPage">nextPage</a>
                </li>
            }
        </ul>
    </nav>
}
else
{
    <div>There is no Data!</div>
}

